{"ast":null,"code":"var _jsxFileName = \"/Users/patmifsud/Documents/github/Untitled Motivation App/Untitled Motivation App/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport library from './library.js';\nimport Card from './Card/Card';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      feedContent: [],\n      seenCards: []\n    };\n\n    this.getRadomNumber = max => {\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max + 1));\n    };\n\n    this.selectRandomMedia = fromHere => {\n      let fromHereArrayLength = fromHere.length - 1;\n      let i = this.getRadomNumber(fromHereArrayLength);\n\n      if (this.state.seenCards.includes(i)) {\n        if (this.state.seenCards.length === library.length) {\n          alert(\"all cards already loaded\");\n        } else {\n          this.selectRandomMedia([...library]);\n        }\n      } else {\n        return fromHere[i];\n      }\n    };\n\n    this.newRadomCardHandler = () => {\n      let newFeedItem = this.selectRandomMedia([...library]);\n      let newFeedContent = [newFeedItem];\n      console.log(newFeedContent);\n      this.setState({\n        feedContent: newFeedContent\n      });\n    };\n\n    this.newRadomCardHandler = () => {\n      let allMedia = [...library];\n      let newFeedItem = this.selectRandomMedia(allMedia);\n      this.setState({\n        feedContent: [...this.state.feedContent, newFeedItem]\n      });\n    };\n  }\n\n  // addCardsHandler = (amountToAdd) => {\n  // }\n  render() {\n    let feed = null;\n\n    if (this.state.feedContent) {\n      feed = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, this.state.feedContent.map(feedItem => {\n        return /*#__PURE__*/React.createElement(Card, {\n          title: feedItem.title,\n          desc: feedItem.desc,\n          video: feedItem.video,\n          image: feedItem.image,\n          quote: feedItem.quote,\n          key: feedItem.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 22\n          }\n        });\n      }));\n      console.log(feed);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, feed), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"addCard\",\n      onClick: this.newRadomCardHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, \"+1 Dose of Inspiration\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"addCard\",\n      onClick: () => this.addCardsHandler(5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, \"+5 Doses of Inspiration\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"clearCards\",\n      onClick: () => this.setState({\n        feedContent: []\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, \"Clear All\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/patmifsud/Documents/github/Untitled Motivation App/Untitled Motivation App/src/App.js"],"names":["React","Component","Header","library","Card","App","state","feedContent","seenCards","getRadomNumber","max","Math","floor","random","selectRandomMedia","fromHere","fromHereArrayLength","length","i","includes","alert","newRadomCardHandler","newFeedItem","newFeedContent","console","log","setState","allMedia","render","feed","map","feedItem","title","desc","video","image","quote","addCardsHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,SAAS,EAAC;AAFJ,KADkB;;AAAA,SAM1BC,cAN0B,GAMRC,GAAD,IAAQ;AACvBA,MAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAN;AACA,aAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAG,CAAvB,CAAX,CAAP;AACD,KATyB;;AAAA,SAW1BI,iBAX0B,GAWLC,QAAD,IAAc;AAChC,UAAIC,mBAAmB,GAAID,QAAQ,CAACE,MAAT,GAAkB,CAA7C;AACA,UAAIC,CAAC,GAAG,KAAKT,cAAL,CAAoBO,mBAApB,CAAR;;AACA,UAAI,KAAKV,KAAL,CAAWE,SAAX,CAAqBW,QAArB,CAA8BD,CAA9B,CAAJ,EAAqC;AACnC,YAAI,KAAKZ,KAAL,CAAWE,SAAX,CAAqBS,MAArB,KAAgCd,OAAO,CAACc,MAA5C,EAAmD;AAC/CG,UAAAA,KAAK,CAAC,0BAAD,CAAL;AACH,SAFD,MAEM;AAAC,eAAKN,iBAAL,CAAuB,CAAC,GAAGX,OAAJ,CAAvB;AAAqC;AAC7C,OAJD,MAKI;AACF,eAAOY,QAAQ,CAACG,CAAD,CAAf;AACD;AACF,KAtByB;;AAAA,SAwB1BG,mBAxB0B,GAwBJ,MAAM;AAC1B,UAAIC,WAAW,GAAI,KAAKR,iBAAL,CAAuB,CAAC,GAAGX,OAAJ,CAAvB,CAAnB;AACA,UAAIoB,cAAc,GAAG,CAACD,WAAD,CAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,WAAKG,QAAL,CAAc;AAACnB,QAAAA,WAAW,EAAEgB;AAAd,OAAd;AACD,KA7ByB;;AAAA,SA+B1BF,mBA/B0B,GA+BJ,MAAM;AAC1B,UAAIM,QAAQ,GAAG,CAAC,GAAGxB,OAAJ,CAAf;AACA,UAAImB,WAAW,GAAI,KAAKR,iBAAL,CAAuBa,QAAvB,CAAnB;AACA,WAAKD,QAAL,CAAc;AACZnB,QAAAA,WAAW,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,WAAf,EAA4Be,WAA5B;AADD,OAAd;AAGD,KArCyB;AAAA;;AAuC1B;AACA;AAEAM,EAAAA,MAAM,GAAG;AAET,QAAIC,IAAI,GAAG,IAAX;;AAEA,QAAI,KAAKvB,KAAL,CAAWC,WAAf,EAA4B;AAC1BsB,MAAAA,IAAI,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKvB,KAAL,CAAWC,WAAX,CAAuBuB,GAAvB,CAA4BC,QAAD,IAAc;AACtC,4BAAO,oBAAC,IAAD;AACP,UAAA,KAAK,EAAEA,QAAQ,CAACC,KADT;AAEP,UAAA,IAAI,EAAED,QAAQ,CAACE,IAFR;AAGP,UAAA,KAAK,EAAEF,QAAQ,CAACG,KAHT;AAIP,UAAA,KAAK,EAAEH,QAAQ,CAACI,KAJT;AAKP,UAAA,KAAK,EAAEJ,QAAQ,CAACK,KALT;AAMP,UAAA,GAAG,EAAEL,QAAQ,CAACC,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQD,OATF,CADH,CADJ;AAcAR,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD;;AAED,wBAAQ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,eAEN;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,IADD,CAFM,eAON;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKR,mBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAPM,eAQN;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAKgB,eAAL,CAAqB,CAArB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARM,eASN;AAAQ,MAAA,KAAK,EAAC,YAAd;AAA2B,MAAA,OAAO,EAAE,MAAM,KAAKX,QAAL,CAAc;AAAEnB,QAAAA,WAAW,EAAC;AAAd,OAAd,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATM,CAAR;AAYD;;AA5E2B;;AA+E5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport library from './library.js';\nimport Card from './Card/Card';\n\n\nclass App extends Component {\n  state = {\n    feedContent: [],\n    seenCards:[],\n  }\n  \n  getRadomNumber = (max) =>{\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max + 1));\n  }\n\n  selectRandomMedia = (fromHere) => {\n    let fromHereArrayLength = (fromHere.length - 1);\n    let i = this.getRadomNumber(fromHereArrayLength);\n    if (this.state.seenCards.includes(i)){\n      if (this.state.seenCards.length === library.length){\n          alert(\"all cards already loaded\");\n      } else{this.selectRandomMedia([...library])}\n    }\n    else{\n      return fromHere[i];\n    }\n  }\n\n  newRadomCardHandler = () => {\n    let newFeedItem = (this.selectRandomMedia([...library]));\n    let newFeedContent = [newFeedItem];\n    console.log(newFeedContent);\n    this.setState({feedContent: newFeedContent});\n  };\n\n  newRadomCardHandler = () => {\n    let allMedia = [...library];\n    let newFeedItem = (this.selectRandomMedia(allMedia));\n    this.setState({\n      feedContent: [...this.state.feedContent, newFeedItem]\n    });\n  };\n\n  // addCardsHandler = (amountToAdd) => {\n  // }\n\n  render() {\n\n  let feed = null;\n\n  if (this.state.feedContent) {\n    feed = (\n        <div>\n          {this.state.feedContent.map((feedItem) => {\n              return <Card \n              title={feedItem.title}\n              desc={feedItem.desc}\n              video={feedItem.video}\n              image={feedItem.image}\n              quote={feedItem.quote}\n              key={feedItem.title}\n               />\n            })}\n        </div>\n    )\n    console.log(feed);\n  }\n\n  return (<div className=\"App\">\n    <Header />\n    <div className=\"mainContainer\">\n    {feed}\n    </div>\n\n\n    <button class=\"addCard\" onClick={this.newRadomCardHandler}>+1 Dose of Inspiration</button>\n    <button class=\"addCard\" onClick={() => this.addCardsHandler(5)}>+5 Doses of Inspiration</button>\n    <button class=\"clearCards\" onClick={() => this.setState({ feedContent:[]})}>Clear All</button>\n    </div>\n  );\n}\n}\n\nexport default App;\n\n\n \n"]},"metadata":{},"sourceType":"module"}