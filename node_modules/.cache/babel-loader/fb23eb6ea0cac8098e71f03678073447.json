{"ast":null,"code":"var _jsxFileName = \"/Users/patmifsud/Documents/github/Untitled Motivation App/Untitled Motivation App/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport library from './library.js';\nimport Card from './Card/Card';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      feedContent: []\n    };\n\n    this.getRadomNumber = max => {\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max + 1));\n    };\n\n    this.selectRandomMedia = fromHere => {\n      let fromHereArrayLength = fromHere.length - 1;\n      let i = this.getRadomNumber(fromHereArrayLength);\n      return fromHere[i];\n    };\n\n    this.newRadomCardHandler = () => {\n      let allMedia = [...library];\n      let newFeedItem = this.selectRandomMedia(allMedia);\n      let newFeedContent = [newFeedItem];\n      console.log(newFeedContent);\n      this.setState({\n        feedContent: newFeedContent\n      });\n    };\n\n    this.createCard = fromThis => {\n      fromThis.map(feedItem => {\n        return /*#__PURE__*/React.createElement(Card, {\n          title: feedItem.title,\n          desc: feedItem.desc,\n          video: feedItem.video,\n          image: feedItem.image,\n          quote: feedItem.quote,\n          key: feedItem.index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    if (this.state.feedContent) {\n      console.log(\"feedContent is not null\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.newRadomCardHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, \"Load Random Inspiration\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.newRadomCardHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, \"Load All Inspiration\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/patmifsud/Documents/github/Untitled Motivation App/Untitled Motivation App/src/App.js"],"names":["React","Component","Header","library","Card","App","state","feedContent","getRadomNumber","max","Math","floor","random","selectRandomMedia","fromHere","fromHereArrayLength","length","i","newRadomCardHandler","allMedia","newFeedItem","newFeedContent","console","log","setState","createCard","fromThis","map","feedItem","title","desc","video","image","quote","index","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAMA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,WAAW,EAAE;AADP,KADkB;;AAAA,SAK1BC,cAL0B,GAKRC,GAAD,IAAQ;AACvBA,MAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAN;AACA,aAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAG,CAAvB,CAAX,CAAP;AACD,KARyB;;AAAA,SAU1BI,iBAV0B,GAULC,QAAD,IAAc;AAChC,UAAIC,mBAAmB,GAAID,QAAQ,CAACE,MAAT,GAAkB,CAA7C;AACA,UAAIC,CAAC,GAAG,KAAKT,cAAL,CAAoBO,mBAApB,CAAR;AACA,aAAOD,QAAQ,CAACG,CAAD,CAAf;AACD,KAdyB;;AAAA,SAgB1BC,mBAhB0B,GAgBJ,MAAM;AAC1B,UAAIC,QAAQ,GAAG,CAAC,GAAGhB,OAAJ,CAAf;AACA,UAAIiB,WAAW,GAAI,KAAKP,iBAAL,CAAuBM,QAAvB,CAAnB;AACA,UAAIE,cAAc,GAAG,CAACD,WAAD,CAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,WAAKG,QAAL,CAAc;AAACjB,QAAAA,WAAW,EAAEc;AAAd,OAAd;AACD,KAtByB;;AAAA,SAyB1BI,UAzB0B,GAyBZC,QAAD,IAAc;AACzBA,MAAAA,QAAQ,CAACC,GAAT,CAAcC,QAAD,IAAe;AAC1B,4BAAO,oBAAC,IAAD;AACP,UAAA,KAAK,EAAEA,QAAQ,CAACC,KADT;AAEP,UAAA,IAAI,EAAED,QAAQ,CAACE,IAFR;AAGP,UAAA,KAAK,EAAEF,QAAQ,CAACG,KAHT;AAIP,UAAA,KAAK,EAAEH,QAAQ,CAACI,KAJT;AAKP,UAAA,KAAK,EAAEJ,QAAQ,CAACK,KALT;AAMP,UAAA,GAAG,EAAEL,QAAQ,CAACM,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQD,OATD;AAUD,KApCyB;AAAA;;AAyC1BC,EAAAA,MAAM,GAAG;AAET,QAAK,KAAK7B,KAAL,CAAWC,WAAhB,EAA6B;AAC3Be,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AAGD,wBAAQ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,eAEN;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFM,eAKN;AAAQ,MAAA,OAAO,EAAE,KAAKL,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCALM,eAMN;AAAQ,MAAA,OAAO,EAAE,KAAKA,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BANM,CAAR;AASD;;AAzD2B;;AA4D5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport library from './library.js';\nimport Card from './Card/Card';\n\n\n\n\n\nclass App extends Component {\n  state = {\n    feedContent: [],\n  }\n  \n  getRadomNumber = (max) =>{\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max + 1));\n  }\n\n  selectRandomMedia = (fromHere) => {\n    let fromHereArrayLength = (fromHere.length - 1);\n    let i = this.getRadomNumber(fromHereArrayLength);\n    return fromHere[i];\n  }\n\n  newRadomCardHandler = () => {\n    let allMedia = [...library];\n    let newFeedItem = (this.selectRandomMedia(allMedia));\n    let newFeedContent = [newFeedItem];\n    console.log(newFeedContent);\n    this.setState({feedContent: newFeedContent});\n  };\n\n\n  createCard = (fromThis) => {\n    fromThis.map((feedItem ) => {\n      return <Card \n      title={feedItem.title}\n      desc={feedItem.desc}\n      video={feedItem.video}\n      image={feedItem.image}\n      quote={feedItem.quote}\n      key={feedItem.index}\n       />\n    })\n  }\n\n\n\n\n  render() {\n\n  if ( this.state.feedContent) {\n    console.log(\"feedContent is not null\")\n  }\n\n\n  return (<div className=\"App\">\n    <Header />\n    <div className=\"mainContainer\">\n      {/* {this.state.feedContent} */}\n    </div>\n    <button onClick={this.newRadomCardHandler}>Load Random Inspiration</button>\n    <button onClick={this.newRadomCardHandler}>Load All Inspiration</button>\n    </div>\n  );\n}\n}\n\nexport default App;\n\n\n \n"]},"metadata":{},"sourceType":"module"}